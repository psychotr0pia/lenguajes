# Generated from Pintador.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,124,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,2,1,2,1,
        3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,3,14,109,8,14,1,14,4,
        14,112,8,14,11,14,12,14,113,1,15,4,15,117,8,15,11,15,12,15,118,1,
        15,1,15,1,16,1,16,0,0,17,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,0,1,0,2,3,0,9,10,13,
        13,32,32,1,0,48,57,125,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,1,35,1,0,0,0,3,37,1,0,0,0,5,39,1,
        0,0,0,7,41,1,0,0,0,9,43,1,0,0,0,11,47,1,0,0,0,13,49,1,0,0,0,15,51,
        1,0,0,0,17,59,1,0,0,0,19,66,1,0,0,0,21,72,1,0,0,0,23,80,1,0,0,0,
        25,93,1,0,0,0,27,99,1,0,0,0,29,108,1,0,0,0,31,116,1,0,0,0,33,122,
        1,0,0,0,35,36,5,40,0,0,36,2,1,0,0,0,37,38,5,44,0,0,38,4,1,0,0,0,
        39,40,5,41,0,0,40,6,1,0,0,0,41,42,5,58,0,0,42,8,1,0,0,0,43,44,5,
        70,0,0,44,45,5,73,0,0,45,46,5,78,0,0,46,10,1,0,0,0,47,48,5,43,0,
        0,48,12,1,0,0,0,49,50,5,45,0,0,50,14,1,0,0,0,51,52,5,80,0,0,52,53,
        5,82,0,0,53,54,5,69,0,0,54,55,5,78,0,0,55,56,5,68,0,0,56,57,5,69,
        0,0,57,58,5,82,0,0,58,16,1,0,0,0,59,60,5,65,0,0,60,61,5,80,0,0,61,
        62,5,65,0,0,62,63,5,71,0,0,63,64,5,65,0,0,64,65,5,82,0,0,65,18,1,
        0,0,0,66,67,5,77,0,0,67,68,5,79,0,0,68,69,5,86,0,0,69,70,5,69,0,
        0,70,71,5,82,0,0,71,20,1,0,0,0,72,73,5,68,0,0,73,74,5,73,0,0,74,
        75,5,66,0,0,75,76,5,85,0,0,76,77,5,74,0,0,77,78,5,65,0,0,78,79,5,
        82,0,0,79,22,1,0,0,0,80,81,5,69,0,0,81,82,5,83,0,0,82,83,5,84,0,
        0,83,84,5,65,0,0,84,85,5,68,0,0,85,86,5,73,0,0,86,87,5,83,0,0,87,
        88,5,84,0,0,88,89,5,73,0,0,89,90,5,67,0,0,90,91,5,65,0,0,91,92,5,
        83,0,0,92,24,1,0,0,0,93,94,5,82,0,0,94,95,5,79,0,0,95,96,5,84,0,
        0,96,97,5,65,0,0,97,98,5,82,0,0,98,26,1,0,0,0,99,100,5,82,0,0,100,
        101,5,69,0,0,101,102,5,80,0,0,102,103,5,69,0,0,103,104,5,84,0,0,
        104,105,5,73,0,0,105,106,5,82,0,0,106,28,1,0,0,0,107,109,5,45,0,
        0,108,107,1,0,0,0,108,109,1,0,0,0,109,111,1,0,0,0,110,112,3,33,16,
        0,111,110,1,0,0,0,112,113,1,0,0,0,113,111,1,0,0,0,113,114,1,0,0,
        0,114,30,1,0,0,0,115,117,7,0,0,0,116,115,1,0,0,0,117,118,1,0,0,0,
        118,116,1,0,0,0,118,119,1,0,0,0,119,120,1,0,0,0,120,121,6,15,0,0,
        121,32,1,0,0,0,122,123,7,1,0,0,123,34,1,0,0,0,4,0,108,113,118,1,
        6,0,0
    ]

class PintadorLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    PRENDER = 8
    APAGAR = 9
    MOVER = 10
    DIBUJAR = 11
    STATS = 12
    ROTAR = 13
    REPETIR = 14
    NUMBER = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "':'", "'FIN'", "'+'", "'-'", "'PRENDER'", 
            "'APAGAR'", "'MOVER'", "'DIBUJAR'", "'ESTADISTICAS'", "'ROTAR'", 
            "'REPETIR'" ]

    symbolicNames = [ "<INVALID>",
            "PRENDER", "APAGAR", "MOVER", "DIBUJAR", "STATS", "ROTAR", "REPETIR", 
            "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "PRENDER", "APAGAR", "MOVER", "DIBUJAR", "STATS", "ROTAR", 
                  "REPETIR", "NUMBER", "WS", "DIGIT" ]

    grammarFileName = "Pintador.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


