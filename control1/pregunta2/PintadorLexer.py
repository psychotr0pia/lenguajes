# Generated from Pintador.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,8,84,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,3,6,69,8,6,1,6,4,6,72,8,6,11,6,12,6,73,
        1,7,4,7,77,8,7,11,7,12,7,78,1,7,1,7,1,8,1,8,0,0,9,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,0,1,0,2,3,0,9,10,13,13,32,32,1,0,48,57,85,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,1,19,1,0,0,0,3,27,1,0,0,0,5,34,
        1,0,0,0,7,40,1,0,0,0,9,48,1,0,0,0,11,61,1,0,0,0,13,68,1,0,0,0,15,
        76,1,0,0,0,17,82,1,0,0,0,19,20,5,80,0,0,20,21,5,82,0,0,21,22,5,69,
        0,0,22,23,5,78,0,0,23,24,5,68,0,0,24,25,5,69,0,0,25,26,5,82,0,0,
        26,2,1,0,0,0,27,28,5,65,0,0,28,29,5,80,0,0,29,30,5,65,0,0,30,31,
        5,71,0,0,31,32,5,65,0,0,32,33,5,82,0,0,33,4,1,0,0,0,34,35,5,77,0,
        0,35,36,5,79,0,0,36,37,5,86,0,0,37,38,5,69,0,0,38,39,5,82,0,0,39,
        6,1,0,0,0,40,41,5,68,0,0,41,42,5,73,0,0,42,43,5,66,0,0,43,44,5,85,
        0,0,44,45,5,74,0,0,45,46,5,65,0,0,46,47,5,82,0,0,47,8,1,0,0,0,48,
        49,5,69,0,0,49,50,5,83,0,0,50,51,5,84,0,0,51,52,5,65,0,0,52,53,5,
        68,0,0,53,54,5,73,0,0,54,55,5,83,0,0,55,56,5,84,0,0,56,57,5,73,0,
        0,57,58,5,67,0,0,58,59,5,65,0,0,59,60,5,83,0,0,60,10,1,0,0,0,61,
        62,5,82,0,0,62,63,5,79,0,0,63,64,5,84,0,0,64,65,5,65,0,0,65,66,5,
        82,0,0,66,12,1,0,0,0,67,69,5,45,0,0,68,67,1,0,0,0,68,69,1,0,0,0,
        69,71,1,0,0,0,70,72,3,17,8,0,71,70,1,0,0,0,72,73,1,0,0,0,73,71,1,
        0,0,0,73,74,1,0,0,0,74,14,1,0,0,0,75,77,7,0,0,0,76,75,1,0,0,0,77,
        78,1,0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,79,80,1,0,0,0,80,81,6,7,0,
        0,81,16,1,0,0,0,82,83,7,1,0,0,83,18,1,0,0,0,4,0,68,73,78,1,6,0,0
    ]

class PintadorLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PRENDER = 1
    APAGAR = 2
    MOVER = 3
    DIBUJAR = 4
    STATS = 5
    ROTAR = 6
    NUMBER = 7
    WS = 8

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'PRENDER'", "'APAGAR'", "'MOVER'", "'DIBUJAR'", "'ESTADISTICAS'", 
            "'ROTAR'" ]

    symbolicNames = [ "<INVALID>",
            "PRENDER", "APAGAR", "MOVER", "DIBUJAR", "STATS", "ROTAR", "NUMBER", 
            "WS" ]

    ruleNames = [ "PRENDER", "APAGAR", "MOVER", "DIBUJAR", "STATS", "ROTAR", 
                  "NUMBER", "WS", "DIGIT" ]

    grammarFileName = "Pintador.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


